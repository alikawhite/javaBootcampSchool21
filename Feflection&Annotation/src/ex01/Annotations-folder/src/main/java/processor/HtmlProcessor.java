package processor;import annotations.HtmlForm;import annotations.HtmlInput;import com.google.auto.service.AutoService;import javax.annotation.processing.*;import javax.lang.model.SourceVersion;import javax.lang.model.element.Element;import javax.lang.model.element.TypeElement;import javax.tools.Diagnostic;import javax.tools.FileObject;import javax.tools.StandardLocation;import java.io.BufferedWriter;import java.io.IOException;import java.io.OutputStreamWriter;import java.util.Set;@SupportedAnnotationTypes("annotations.HtmlForm")@SupportedSourceVersion(SourceVersion.RELEASE_8)@AutoService(Processor.class)public class HtmlProcessor extends AbstractProcessor {    @Override    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {        for (Element element : roundEnv.getElementsAnnotatedWith(HtmlForm.class)) {            if (element.getKind().isClass()) {                TypeElement typeElement = (TypeElement) element;                HtmlForm htmlForm = typeElement.getAnnotation(HtmlForm.class);                generateHtmlFile(htmlForm, typeElement);            }        }        return true;    }    private void generateHtmlFile(HtmlForm htmlForm, TypeElement fields) {        try {            FileObject fileObject = processingEnv.getFiler().createResource(StandardLocation.CLASS_OUTPUT, "", htmlForm.fileName());            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(fileObject.openOutputStream()));            writer.write("<form action=\"" + htmlForm.action() + "\" method=\"" + htmlForm.method() + "\">\n");            for (Element enclosedElement : fields.getEnclosedElements()) {                if (enclosedElement.getKind().isField() && enclosedElement.getAnnotation(HtmlInput.class) != null) {                    HtmlInput htmlInput = enclosedElement.getAnnotation(HtmlInput.class);                    writer.write("\t<input type=\"" + htmlInput.type() + "\" name=\"" + htmlInput.name() + "\" placeholder=\"" + htmlInput.placeholder() + "\">\n");                }            }            writer.write("\t<input type=\"submit\" value=\"Send\">\n");            writer.write("</form>");            writer.close();        } catch (IOException e) {            processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR, "Error creating HTML file: " + e.getMessage());        }    }}
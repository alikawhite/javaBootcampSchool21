package edu.school21.spring.service.services;import edu.school21.spring.service.config.TestApplicationConfig;import org.junit.jupiter.api.BeforeAll;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.params.ParameterizedTest;import org.junit.jupiter.params.provider.ValueSource;import org.springframework.context.ApplicationContext;import org.springframework.context.annotation.AnnotationConfigApplicationContext;import javax.sql.DataSource;import java.sql.Connection;import java.sql.SQLException;import java.sql.Statement;import static org.junit.jupiter.api.Assertions.assertNotNull;public class UserServiceImplTest {    private static DataSource dataSource;    private static UsersService usersServiceJdbc;    private static UsersService usersServiceJdbcTemplate;    @BeforeAll    static void before() {        ApplicationContext context =                new AnnotationConfigApplicationContext(TestApplicationConfig.class);        dataSource = context.getBean("dataSource", DataSource.class);        usersServiceJdbc = context.getBean("usersServiceJdbcBean", UsersService.class);        usersServiceJdbcTemplate = context.getBean("usersServiceJdbcTemplateBean", UsersService.class);    }    @BeforeEach    void init() {        try (Connection connection = dataSource.getConnection();             Statement statement = connection.createStatement()) {            statement.executeUpdate("DROP SCHEMA IF EXISTS test CASCADE;");            statement.executeUpdate("CREATE SCHEMA IF NOT EXISTS test;");            statement.executeUpdate("CREATE TABLE IF NOT EXISTS test.user "                    + "(id INTEGER, email VARCHAR(50) NOT NULL, password VARCHAR(50));");        } catch (SQLException e) {            System.err.println(e.getMessage());        }    }    @ParameterizedTest    @ValueSource(strings = {"user1@school21.ru", "user2@school21.ru", "user3@school21.ru"})    public void isSignedUp(String email) {        assertNotNull(usersServiceJdbc.signUp(email));    }    @ParameterizedTest    @ValueSource(strings = {"user1@school21.ru", "user2@school21.ru", "user3@school21.ru"})    public void isSignedUpTemplate(String email) {        assertNotNull(usersServiceJdbcTemplate.signUp(email));    }}
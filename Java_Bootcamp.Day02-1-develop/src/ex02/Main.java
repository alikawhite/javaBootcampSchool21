package ex02;import java.io.File;import java.nio.file.*;import java.util.Scanner;public class Main {    private static Path path;    public static void main(String[] args) {        System.out.print("\n");        if (args.length != 1 || !args[0].startsWith("--current-folder=")) {            System.err.println("Неправильно!!");            System.exit(-1);        }        path = checkPath(Paths.get(args[0].substring("--current-folder=".length())));        Scanner in = new Scanner(System.in);        String command;        while (!(command = in.next()).equals("exit")) {            if (command.equals("ls")) commandLs();            if (command.equals("cd")) commandCd(in.next());            if (command.equals("mv")) {                String what = in.next(), where = in.next();                commandMv(what, where);            }        }    }    private static void commandLs() {        String[] files = new File(String.valueOf(path)).list();        if (files != null) {            for (String file : files) {                File tmp = new File(path + "/" + file);                System.out.printf("%s\t%d KB\n", file, checkSize(tmp));            }        } else System.out.println("Тут ничего нет((");    }    private static void commandCd(String nextFolder) {        File tmp = new File(path + "/" + nextFolder);        if (tmp.isDirectory()) {            path = checkPath(Path.of(path + "/" + nextFolder));        } else System.out.println("Это не директория");    }    private static void commandMv(String whatFile, String whatDir) {        File what = new File(path + "/" + whatFile);        if (what.isFile()) {            Path where = Path.of(path + "/" + whatDir);            where = where.normalize();            if (Files.exists(where)) {                what.renameTo(new File(where + "/" + whatFile));            } else if (where.isAbsolute()) {                what.renameTo(new File(where.toUri()));            } else System.out.println("Неправильный путь для перемещения");        } else System.out.println("Такого файла нет");    }    private static Path checkPath(Path path) {        if (!path.isAbsolute()) {            System.err.println("Путь не абсолютный((");            System.exit(-1);        } else {            path = path.normalize();            System.out.println(path);        }        return path;    }    private static long checkSize(File file) {        if (file.isDirectory()) return directorySize(file);        else return file.length() / 1024;    }    public static long directorySize(File folder) {        long size = 0;        File[] files = folder.listFiles();        if (files != null) {            for (File file : files) {                if (file.isFile()) {                    size += file.length();                } else {                    size += directorySize(file);                }            }        }        return size;    }}